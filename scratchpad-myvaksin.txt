==================
Created: 12Feb2021
==================
myvaksin: TODO
- Add comorbids field to People page.
[*]- Add people picture upload field to People page.
- Add '3rd/Booster Dose' field to the Edit/New form for 
  vaccination table of People page.
[*]- Add 'saving...' & 'saved' status to the toolbar of 
  vaccination table of People page.
- Add 'PastCOVID19Infection' boolean field to People.
- Adjust the look and size of the page footer.
- Add multi-criteria search feature to People Search page.
- Add a toast-like notification upon successful People 
  profile update on People Detail page.
- In PeopleDetail page, change the AOSA back to readonly 
  v-text-field.
- Try converting all PostgreSQL 'timestamp' type to 'date' type.
- Add retry-loop-on-fail to all Axios http call.
- [Golang] Is it possible to use json.Encoder() to WRITE the 
  webservice response straight to http.ResponseWriter without 
  having first to convert the response to the intermediary json []byte?
- To compress the ProfilePicData base64 encoded image before 
  storing it to database, and to decompress it upon reading it back
  from database.
- On PeopleSearch page, add a column to the search result that shows 
  the status COVID vaccination status.
- Adjust the footer



=====
Extra
=====
1.  How to send TAC code?
2.  Apply TAC code to my applications




================
Pending Thoughts
================
1.  auto detect dob from given ic if it's an ic.
2.  auto capitalise the first letter of the name appearing at 
    pic section of people profile
[*]3.  add different SignUp status to the http api call so that 
    fe can display different message accordingly.
4.  Add VerifyToken function to every webservice api call.
[*]5.  Adjust the look of AppBar
[*]6.  Add Nginx reverse proxy
[*]7.  Either to make 'password' field nullable at DB level and create 
    a not-null check at frontend level, or 
    Make 'password' field not-null at DB level and create a default 
    password for every new profile created by myvaksin provider.
8. Add a url rewrite in Nginx config so that we can restrict 
   'Access-Control-Allow-Origin' header.
9. Add a one way hashing function to hash the user password and 
   store it on the database instead of the original password.
10. Reduce the z-index of the profile pic on PeopleDetail page 
    because it's overlapping the AppBar when AppBar reappear 
    during scrolling up from bottom of the page.
11. Limit PeopleSearch page to role Administrator, Recruiter & Provider only.
    Receiver role should see only PeopleDetail page.         




=====
Notes
=====
1. PostgreSQL 
   - It is ok to get from PostgreSQL timestamp value using pgx and
   Golang time.Time type, but it will fail when pgx is used to set PostgreSQL 
   timestamp value using Golang time.Time type.
   - It is ok to get and set PostgreSQL timestamp value using pgx and 
   Golang time.Time type.

============================================================
LetsEncrypt - Certbot Verification to Obtain SSL Certificate
============================================================
patrick@ubuntu20-04-myvaksin:~$ sudo certbot --nginx -d myvaksin.com -d www.myvaksin.com
[sudo] password for patrick: 

Saving debug log to /var/log/letsencrypt/letsencrypt.log
Plugins selected: Authenticator nginx, Installer nginx
Obtaining a new certificate
Performing the following challenges:
http-01 challenge for myvaksin.com
http-01 challenge for www.myvaksin.com
Using default address 80 for authentication.
Using default address 80 for authentication.
Waiting for verification...
Cleaning up challenges
Deploying Certificate to VirtualHost /etc/nginx/sites-enabled/myvaksin
Deploying Certificate to VirtualHost /etc/nginx/sites-enabled/myvaksin
nginx: [emerg] a duplicate listen 0.0.0.0:443 in /etc/nginx/sites-enabled/myvaksin:29
Rolling back to previous server configuration...
nginx restart failed:
b''
b''

IMPORTANT NOTES:
 - We were unable to install your certificate, however, we
   successfully restored your server to its prior configuration.
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/myvaksin.com/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/myvaksin.com/privkey.pem
   Your cert will expire on 2021-05-19. To obtain a new or tweaked
   version of this certificate in the future, simply run certbot again
   with the "certonly" option. To non-interactively renew *all* of
   your certificates, run "certbot renew"





========================================================
LetsEncrypt - Certbot Certificate Renewal (Dry Run Only)
========================================================
patrick@ubuntu20-04-myvaksin:~$ sudo certbot renew --dry-run


Saving debug log to /var/log/letsencrypt/letsencrypt.log
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Processing /etc/letsencrypt/renewal/myvaksin.com.conf
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Cert not due for renewal, but simulating renewal for dry run
Plugins selected: Authenticator nginx, Installer nginx
Renewing an existing certificate
Performing the following challenges:
http-01 challenge for myvaksin.com
http-01 challenge for www.myvaksin.com
Using default address 80 for authentication.
Using default address 80 for authentication.
Waiting for verification...
Cleaning up challenges

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
new certificate deployed with reload of nginx server; fullchain is
/etc/letsencrypt/live/myvaksin.com/fullchain.pem
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
** DRY RUN: simulating 'certbot renew' close to cert expiry
**          (The test certificates below have not been saved.)

Congratulations, all renewals succeeded. The following certs have been renewed:
  /etc/letsencrypt/live/myvaksin.com/fullchain.pem (success)
** DRY RUN: simulating 'certbot renew' close to cert expiry
**          (The test certificates above have not been saved.)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

IMPORTANT NOTES:
 - Your account credentials have been saved in your Certbot
   configuration directory at /etc/letsencrypt. You should make a
   secure backup of this folder now. This configuration directory will
   also contain certificates and private keys obtained by Certbot so
   making regular backups of this folder is ideal.


